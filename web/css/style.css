/*
 * Main stylesheet.
 * Not the best way to 
 * write everything but is
 * decent and works.
 */
:root {
    --transition-speed: 0.25s;
    --editing-highlight-color: rgb(70, 70, 220);
}

/*
 * Styling below are for general things,
 * such as button and input[type="file"]
 */
body {
    margin: 0px;
    padding: 0px;
    width: 100vw;
    height: 100vh;
    overflow-y: hidden;
    font-family: Roboto;
}

button {
    cursor: pointer;
    border: none;
    background-color: transparent;
    font-size: 12px;
}
button.disabled i, label.disabled i {
    color: rgb(200, 200, 200);
}

/* This styling hides the input type file without
 * display: none */
input[type="file"] {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0,0,0,0);
    border: 0;
}

.fas, a {
    color: rgb(100, 100, 100);
    transition-duration: var(--transition-speed);
    cursor: pointer;
}

.disabled, .disabled * {
    pointer-events: none !important;
}

/*
 * Styling below are for the main
 * elements of everything in this 
 * site.
 */
#noscript-message, #orientation-warning {
    width: 250px;
    font-family: Roboto;
    font-size: 32px;
    font-weight: 100;
   
    top: 50%;
    left: 50%;
    position: absolute;
    transform: translate(-50%, -50%);
}

#orientation-warning {
    display: none;
}

#controls #github i, #controls #about i {
    font-size: 28px;
}

#main-grid {
    height: 100%;
    display: grid;
    overflow-x: hidden;
    overflow-y: auto;

    grid-template-columns: 34% 34% 34%;
    grid-template-rows: 30px 50px auto;
}

#notifier {
    grid-column-start: 1;
    grid-column-end: column3-end;
    grid-row-start: 1;
    grid-row-end: 1;

    font-size: 16px;
    color: rgb(255, 255, 255);
    background-color: rgb(255, 255, 255);

    display: flex;
    align-items: center;
    justify-content: space-around;

    transition-duration: 1s;
}

#notifier.valid {
    color: rgb(255, 255, 255);
    background-color: rgb(50, 170, 50);
}

#notifier.warning {
    color: rgb(36, 36, 36);
    background-color: rgb(255, 207, 36);
}

#notifier.error {
    color: rgb(255, 255, 255);
    background-color: rgb(255, 0, 0);
}

#controls {
    grid-column-start: 1;
    grid-column-end: column3-end;
    grid-row-start: 2;
    grid-row-end: 2;
   
    display: flex;
    align-items: center;
    justify-content: space-around;
}

#controls i {
    font-size: 14px;
}

.control-group {
    margin: 0px 10px;
    display: flex;
    align-items: center;
}

.control-group > * {
    margin: 0px 10px;
}

#male {
    grid-column-start: 1;
    grid-column-end: 1;
    grid-row-start: 3;
    grid-row-end: 3;
}

#ground {
    /* No styles */
}

#female {
    /* The direction is changed to show
     * the scrollbar on the right place. */
    direction: rtl;

}

#male, #ground, #female {
    height: 100%;
    display: flex;
    align-items: center;
    flex-direction: column;
    overflow-y: scroll;
}

.add-entity {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 75%;
    min-height: 30px;
    border-radius: 20px;

    cursor: pointer;
    background-color: rgba(100,100,100,0.1);
    transition-duration: var(--transition-speed);
}

.fas:hover, a:hover {
    color: rgb(0, 0, 0);
}

.add-entity i {
    color: rgba(0, 0, 0, 0.3);
}

.add-entity:hover {
    background-color: rgba(0,0,0,0.2);
}

/*
 * Below are the default styling
 * for entity element.
 */
.entity {
    direction: ltr;
    text-align: left;
    background-color: rgb(255, 255, 255);
    color: rgb(100, 100, 100);

    font-size: 16px;
    font-family: Roboto;
    width: 80%;
    min-height: 30px; 

    white-space: nowrap;
    border-radius: 20px;
    overflow: hidden;

    transition-duration: var(--transition-speed);
    transition-property: min-height, opacity;
    cursor: pointer;

    box-shadow: 0 1px 2px rgba(0,0,0,0.07),
                0 2px 4px rgba(0,0,0,0.07),
                0 4px 8px rgba(0,0,0,0.07),
                0 8px 16px rgba(0,0,0,0.07),
                0 16px 32px rgba(0,0,0,0.07),
                0 32px 64px rgba(0,0,0,0.07);
}

/*
 * The class styling 'edit-preference' is used for when
 * this element is being edited and is dynamically
 * added or removed with Javascript.
 */
.entity.edit-preference {
    background-color: var(--editing-highlight-color);
}

.entity.edit-preference .name .toggle-preference {
    transform: rotate(90deg);
}

.entity.edit-preference .name, .entity.edit-preference .name * { 
    color: rgb(255, 255, 255);
    background-color: var(--editing-highlight-color);
}

.entity.edit-preference .preference {
    background-color: rgb(255, 255, 255);
    opacity: 1;
    min-height: inherit;
}

.entity.edit-preference .preference div {
    cursor: move;
}

.entity .name {
    margin-top: 5px;
    padding-bottom: 5px;
}

.entity .name .toggle-preference {
    margin-left: 5px;
}

.toggle-preference i {
    font-size: 16px;
}

.entity .name .remove-entity {
    margin-right: 5px;
    float: right;
    visibility: hidden;
}

.entity .name * {
    background: transparent;
}

.entity:hover .name .remove-entity, .entity.edit-preference .name .remove-entity {
    visibility: visible;
}

.remove-entity i {
    font-size: 16px;
}

.entity .name .toggle-preference i, .entity .name .remove-entity i {
    transition-property: none;
}

.entity .name input {
    font-size: 14px;
    color: rgb(100,100,100);

    width: 50%;
    border-radius: 5px;

    outline: none;
    border: none;
    cursor: pointer;
}

.entity .preference {
    opacity: 0;
    transition-property: opacity;
    transition-duration: var(--transition-speed);
}


.entity .preference div {
    padding: 10px;
    padding-left: 30px;
    transition-duration: var(--transition-speed);
}

.entity:not(.marry) .preference div:hover {
    background-color: rgb(240, 240, 240);
}

.entity .preference div.dragging {
    color: rgb(200, 200, 200);
    background-color: rgb(200, 200, 200);
}

.entity.disabled, .entity.disabled *, .entity.prepare {
    transition-property: all;
}

.entity.disabled .name * {
    background: transparent;
}

/*
 * These styles can be used 
 * on male, ground and female
 * containers. Used in
 * visualization.
 */
.entity.prepare {
    background-color: rgb(29, 83, 119);
}

.entity.prepare .name * {
    color: rgb(255,255,255);
}

#ground .entity .name button {
    opacity: 0;
}

#ground .entity .name, #ground .entity .name * {
    background: transparent;
}

#ground .entity .name input {
    color: rgb(255, 255, 255);
}

.entity.engage {
    background-color: rgb(255, 128, 0);
}

.entity.break {
    background-color: rgb(240, 0, 0);
}

.entity.reject {
    background-color: rgb(250, 100, 100);
}

.entity.marry {
    background-color: rgb(70, 170, 70);
}

.preference div.select-highlight {
    background-color: rgb(200,200,200);
}

.preference div.partner-highlight {
    color: rgb(255, 255, 255);
    background-color: rgb(255, 158, 0);
}

.preference div.marry-highlight {
    color: rgb(255, 255, 255);
    background-color: rgb(100, 200, 100);
}

#ground .entity.expand-preference {

}

#ground .entity.expand-preference .name, .entity.expand-preference .name * { 
    color: rgb(255, 255, 255);
}

#ground .entity.expand-preference .preference {
    background-color: rgb(255, 255, 255);
    opacity: 1;
    min-height: inherit;
}

#ground .entity.expand-preference .preference div {
    cursor: pointer;
}


.entity:first-child, .add-entity:first-child {
    margin-top: 30px;
}

.add-entity:last-child {
    margin-bottom: 30px;
}

.entity, .add-entity {
    margin: 15px 0px;
}

@media only screen and (min-width: 900px) {

    #controls #github i, #controls #about i {
        font-size: 38px;
    }
    
    #controls i {
        font-size: 20px;
    }

    .entity {
        font-size: 24px;
    }

    .entity .name {
        margin-top: 10px;
    }

    .entity .name input {
        
        font-size: 24px;
    }

    .entity .preference div {
        padding-left: 38px;
    }

    .toggle-preference i, .remove-entity i {
        font-size: 24px;
    }
    
    .entity, .add-entity {
        min-height: 50px;
        height: 50px;
        max-height: 50px; 
        margin: 20px 0px;
    }
}
